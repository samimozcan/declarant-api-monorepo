generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Certificate {
  id             String    @id @map("id") @db.Uuid
  documentType   String?   @map("documenttype")
  jobOrderId     String    @map("joborderid") @db.Uuid
  document       Json?     @map("document")
  version        String?   @map("version")
  status         Int?      @map("status")
  statusTracking Json      @map("statustracking")
  requestId      String?   @map("requestid") @db.Uuid
  createdAt      DateTime? @map("createdat") @db.Timestamptz(6)
  updatedAt      DateTime? @map("updatedat") @db.Timestamptz(6)

  @@map("certificate")
}

model Declaration {
  id               String    @id @map("id") @db.Uuid
  jobOrderId       String?   @map("joborderid") @db.Uuid
  document         Json?     @map("document")
  version          String    @map("version")
  registrationDate DateTime? @map("registrationdate") @db.Timestamptz(6)
  status           Int?      @map("status")
  userName         String?   @map("username")
  statusTracking   Json      @map("statustracking")
  requestId        String?   @map("requestid") @db.Uuid
  createdAt        DateTime? @map("createdat") @db.Timestamptz(6)
  updatedAt        DateTime? @map("updatedat") @db.Timestamptz(6)

  @@map("declaration")
}

model ExportJobOrder {
  id                              String    @id @map("id") @db.Uuid
  jobOrderType                    String    @map("jobordertype")
  owners                          Json      @map("owners")
  consignorName                   String?   @map("consignorname")
  consignorId                     String?   @map("consignorid")
  consigneeName                   String?   @map("consigneename")
  customerReference1              String?   @map("customerreference1")
  customerReference2              String?   @map("customerreference2")
  customerReference3              String?   @map("customerreference3")
  declarationResponsibleReference String?   @map("declarationresponsiblereference")
  consigneeId                     String?   @map("consigneeid")
  reqDocument                     Json?     @map("reqdocument")
  document                        Json?     @map("document")
  version                         String    @map("version")
  status                          Int?      @map("status")
  userName                        String?   @map("username")
  relations                       Json?     @map("relations")
  vehicleInformation              Json?     @map("vehicleinformation")
  statusTracking                  Json      @map("statustracking")
  requestId                       String?   @map("requestid") @db.Uuid
  createdAt                       DateTime? @default(now()) @map("createdat") @db.Timestamptz(6)
  updatedAt                       DateTime? @default(now()) @map("updatedat") @db.Timestamptz(6)

  @@map("exportjoborder")
}

model File {
  id               String    @id @map("id") @db.Uuid
  jobOrderId       String    @map("joborderid") @db.Uuid
  fileName         String    @map("filename")
  fileBusinessType String    @map("filebusinesstype")
  data             Bytes?    @map("data")
  fileType         String    @map("filetype")
  createdAt        DateTime  @map("createdat") @db.Timestamptz(6)
  updatedAt        DateTime? @map("updatedat") @db.Timestamptz(6)

  @@map("file")
}

model History {
  id             Int       @id @default(autoincrement()) @map("id")
  schema         String?   @map("schema")
  documentName   String?   @map("documentname")
  documentId     String?   @map("documentid")
  registerAt     DateTime? @map("registerat") @db.Timestamptz(6)
  operation      String?   @map("operation")
  documentData   Json?     @map("documentdata")
  registerAtUnix Float?    @map("registeratunix")

  @@map("history")
}

model ImportCertificate {
  id             String    @id @map("id") @db.Uuid
  documentType   String?   @map("documenttype")
  jobOrderId     String    @map("joborderid") @db.Uuid
  document       Json?     @map("document")
  version        String?   @map("version")
  status         Int?      @map("status")
  statusTracking Json      @map("statustracking")
  requestId      String?   @map("requestid") @db.Uuid
  createdAt      DateTime? @map("createdat") @db.Timestamptz(6)
  updatedAt      DateTime? @map("updatedat") @db.Timestamptz(6)

  @@map("importcertificate")
}

model ImportDeclaration {
  id               String    @id @map("id") @db.Uuid
  jobOrderId       String?   @map("joborderid") @db.Uuid
  document         Json?     @map("document")
  version          String    @map("version")
  registrationDate DateTime? @map("registrationdate") @db.Timestamptz(6)
  status           Int?      @map("status")
  userName         String?   @map("username")
  statusTracking   Json      @map("statustracking")
  requestId        String?   @map("requestid") @db.Uuid
  createdAt        DateTime? @map("createdat") @db.Timestamptz(6)
  updatedAt        DateTime? @map("updatedat") @db.Timestamptz(6)

  @@map("importdeclaration")
}

model ImportFile {
  id               String    @id @map("id") @db.Uuid
  jobOrderId       String    @map("joborderid") @db.Uuid
  fileName         String    @map("filename")
  fileBusinessType String    @map("filebusinesstype")
  data             Bytes?    @map("data")
  fileType         String    @map("filetype")
  createdAt        DateTime  @map("createdat") @db.Timestamptz(6)
  updatedAt        DateTime? @map("updatedat") @db.Timestamptz(6)

  @@map("importfile")
}

model ImportJobOrder {
  id                              String    @id @map("id") @db.Uuid
  jobOrderType                    String    @map("jobordertype")
  owners                          Json      @map("owners")
  consignorName                   String?   @map("consignorname")
  consignorId                     String?   @map("consignorid")
  consigneeName                   String?   @map("consigneename")
  customerReference1              String?   @map("customerreference1")
  customerReference2              String?   @map("customerreference2")
  customerReference3              String?   @map("customerreference3")
  declarationResponsibleReference String?   @map("declarationresponsiblereference")
  consigneeId                     String?   @map("consigneeid")
  reqDocument                     Json?     @map("reqdocument")
  document                        Json?     @map("document")
  version                         String    @map("version")
  status                          Int?      @map("status")
  userName                        String?   @map("username")
  relations                       Json?     @map("relations")
  vehicleInformation              Json?     @map("vehicleinformation")
  statusTracking                  Json      @map("statustracking")
  requestId                       String?   @map("requestid") @db.Uuid
  createdAt                       DateTime? @map("createdat") @db.Timestamptz(6)
  updatedAt                       DateTime? @map("updatedat") @db.Timestamptz(6)

  @@map("importjoborder")
}

model Migration {
  id        Int       @id @map("id")
  createdAt DateTime? @map("createdat") @db.Timestamptz(6)

  @@map("migration")
}

model T1 {
  ownerId   String?   @map("ownerid")
  readers   String?   @map("readers")
  writers   String?   @map("writers")
  deleters  String?   @map("deleters")
  requestId String?   @map("requestid") @db.Uuid
  createdAt DateTime? @map("createdat") @db.Timestamptz(6)
  updatedAt DateTime? @map("updatedat") @db.Timestamptz(6)
  id        String    @id @map("id") @db.Uuid
  document  Json      @map("document")
  mrnNumber String    @map("mrnnumber")
  version   String?   @map("version")
  status    Int?      @map("status")
  relations Json?     @map("relations")

  @@map("t1")
}
